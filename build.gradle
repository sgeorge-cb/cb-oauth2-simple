buildscript {
	ext {
		springBootVersion = '1.3.1.RELEASE'
        appName = 'cb-authserver'
	}
	repositories {
		mavenCentral()
		 maven { url 'http://repo.spring.io/plugins-release' }
	}
	dependencies {
		classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
    id 'net.researchgate.release' version '2.3.4'
    id "org.sonarqube" version '1.1'
    id "com.jfrog.artifactory" version "4.0.0"
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.researchgate.release'
apply plugin: 'org.sonarqube'
apply plugin: 'com.jfrog.artifactory'
apply plugin: 'maven-publish'
apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'

version = "${version}"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
		maven { url "https://repo.spring.io/plugins-release" }
		
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-jersey')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-undertow')
    compile('io.springfox:springfox-swagger2:2.2.+')
    compile('io.springfox:springfox-swagger-ui:2.2.+') //remove this if we don't want to see swagger-ui.html
	compile('org.springframework.security.oauth:spring-security-oauth2')
	compile('org.springframework.security:spring-security-core')
	compile('org.springframework.security:spring-security-jwt')
	compile('mysql:mysql-connector-java:6.0.2')
    compile('org.apache.commons:commons-dbcp2:2.0')
	compile('org.springframework.boot:spring-boot-configuration-processor')
    compile('org.springframework.data:spring-data-mongodb')
    compile('org.mongodb:mongo-java-driver')
    compile('com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.7.2')
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

sonarqube {
	properties {
		property "sonar.java.coveragePlugin", "jacoco"
		property "sonar.projectName", "Spring Security"
		property "sonar.jacoco.reportPath", "${buildDir.name}/jacoco.exec"
		property "sonar.links.homepage", 'https://www.springsource.org/spring-security'
		property "sonar.links.ci", 'https://build.springsource.org/browse/SEC-B32X'
		property "sonar.links.issue", 'https://jira.springsource.org/browse/SEC'
		property "sonar.links.scm", 'https://github.com/SpringSource/spring-security'
		property "sonar.links.scm_dev", 'https://github.com/SpringSource/spring-security.git'
		property "sonar.java.coveragePlugin", "jacoco"
	}
}

springBoot {
    executable = true
}

publishing{
	publications {
		javaArtifact (MavenPublication) {
			from components.java
                        artifact(sourcesJar)
		}
	}
}

